apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: "info.solidsoft.pitest"


sourceCompatibility = 1.7
compileJava.options.encoding = 'UTF-8'

group = "com.github.zuinnote"
archivesBaseName = "hadoopcryptoledger-fileformat"
version = "1.0.8"


jar {
    manifest {
        attributes 'Implementation-Title': 'ZuInnoTe - Hadoop CryptoLedger Analytics Library - Inputformat', 'Implementation-Version': version
    }
    baseName = 'hadoopcryptoledger-fileformat'
}



repositories {
    mavenCentral()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
    }
}

configurations {
	umlDoclet
	provided
	integrationTestCompile.extendsFrom testCompile
    	integrationTestRuntime.extendsFrom testRuntime
}

eclipse {

  classpath {
    plusConfigurations += [ configurations.provided ]
  }
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
     integrationTest {
        java {
            compileClasspath += main.output + test.output + configurations.provided
            runtimeClasspath += main.output + test.output + configurations.provided
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

pitest {
    targetClasses = ['org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtil','org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParser']  //by default "${project.group}.*"
    targetTests = ['org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest','org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest']
    timestampedReports = false
    threads = 4
    outputFormats = ['XML', 'HTML']
}

javadoc.classpath += configurations.provided


task hadoopCryptoLedgerJavaDocs(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

test {
    testLogging.showStandardStreams = true
}

artifacts {
    archives hadoopCryptoLedgerJavaDocs, sourcesJar
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId 'com.github.zuinnote'
            artifactId 'hadoopcryptoledger-fileformat'
            version '1.0.8'

            from components.java
        }
    }
}

dependencies {
    // uml doclet for using planuml in javadoc
    umlDoclet "nl.talsmasoftware:umldoclet:1.0.8"
    // hadoop libraries
   provided("org.apache.hadoop:hadoop-common:2.7.0")
   provided("org.apache.hadoop:hadoop-mapreduce-client-common:2.7.0")
   // JSR 374 JSON processing API
   compile("javax.json:javax.json-api:1.1")
   // log4j2
   provided("org.apache.logging.log4j:log4j-api:2.4.1")
   // test
   testCompile group: 'junit', name: 'junit', version: '4.12'
}
